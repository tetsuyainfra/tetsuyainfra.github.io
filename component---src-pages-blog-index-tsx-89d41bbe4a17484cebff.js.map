{"version":3,"file":"component---src-pages-blog-index-tsx-89d41bbe4a17484cebff.js","mappings":"sKA8BA,IAlB6BA,IAAqC,IAApC,MAAEC,EAAK,UAAEC,EAAS,SAAEC,GAAU,EAC1D,MAAQF,MAAOG,EAAcC,YAAaC,IACxCC,EAAAA,EAAAA,KAEF,IAAIC,EAAS,KAMb,OAJEA,EADEN,IAGOD,EAAWA,EAAK,MAAMG,EAAiBA,IAGhDK,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,QAAAA,KAAQD,GACPL,EACA,C,sHCYP,UA5BuCH,IAAa,IAAZ,KAACU,GAAM,EAC7CC,QAAQC,IAAI,gBAAiBF,GAAMH,EAAAA,EAAAA,MACnC,MAAMM,EAAQH,EAAKI,OAAOC,MAC1B,OACEN,EAAAA,EAAAA,IAACO,EAAAA,EAAM,MACLP,EAAAA,EAAAA,IAAAA,KAAAA,KAAI,QACHI,EAAMI,KAAKC,IAEV,MAAM,GACJC,EAAE,QACFC,EACAC,aAAa,MAAEpB,GACfqB,QAAQ,IAAEC,EAAG,WAAEC,IACbN,EACJ,OACET,EAAAA,EAAAA,IAAAA,UAAAA,CAASgB,IAAKN,IACZV,EAAAA,EAAAA,IAAAA,KAAAA,MACEA,EAAAA,EAAAA,IAACiB,EAAAA,KAAI,CAACC,GAAIJ,GAAMtB,KAGlBQ,EAAAA,EAAAA,IAAAA,IAAAA,KAAIW,GACI,IAGP,EAMN,MAmBMQ,EAAe,KAC1BnB,EAAAA,EAAAA,IAACoB,EAAAA,EAAG,CAAC5B,MAAM,mB","sources":["webpack://tetsuyainfra-s-hideout/./src/components/SEO.tsx","webpack://tetsuyainfra-s-hideout/./src/pages/blog/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\n\nimport useSiteMetadata from \"./useSiteMetadata\";\nimport { Toolbar, AppBar, Typography } from \"@mui/material\";\n\ntype Props = {\n  title?: string;\n  fullTitle?: string;\n  children?: React.ReactNode;\n};\nconst SEO: React.FC<Props> = ({ title, fullTitle, children }) => {\n  const { title: defaultTitle, titleFormat: defaultTitleFormat } =\n    useSiteMetadata();\n\n  let title_ = null;\n  if (fullTitle) {\n    title_ = fullTitle;\n  } else {\n    title_ = title ? `${title} | ${defaultTitle}` : defaultTitle;\n  }\n  return (\n    <>\n      <title>{title_}</title>\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import * as React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport SEO from \"../../components/SEO\";\nimport useSiteMetadata from \"../../components/useSiteMetadata\";\n\ntype DataProps = Queries.BlogPagesQuery\ntype Props = PageProps<DataProps>\n\nconst BlogIndexPage: React.FC<Props> = ({data }) => {\n  console.log(\"BlogIndexPage\", data, useSiteMetadata());\n  const posts = data.allMdx.nodes\n  return (\n    <Layout>\n      <h1>Blog</h1>\n      {posts.map((node: any) => {\n        //\n        const {\n          id,\n          excerpt,\n          frontmatter: { title },\n          fields: { url, local_date },\n        } = node\n        return (\n          <article key={id}>\n            <h2>\n              <Link to={url}>{title}</Link>\n            </h2>\n            {/* <p>Posted: {format(parseISO(local_date), timestampFormat)}</p> */}\n            <p>{excerpt}</p>\n          </article>\n        )\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndexPage;\n\nexport const query = graphql`\n  query BlogPages {\n    allMdx(sort: { fields: { local_date: DESC } }) {\n      nodes {\n        fields {\n          url\n          local_date\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => (\n  <SEO title=\"Blog Index Page\" />\n);\n"],"names":["_ref","title","fullTitle","children","defaultTitle","titleFormat","defaultTitleFormat","useSiteMetadata","title_","___EmotionJSX","data","console","log","posts","allMdx","nodes","Layout","map","node","id","excerpt","frontmatter","fields","url","local_date","key","Link","to","Head","SEO"],"sourceRoot":""}