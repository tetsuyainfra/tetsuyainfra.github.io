{"version":3,"file":"component---src-pages-blog-archive-tsx-02de51142786b48db2a4.js","mappings":"4OAcA,MAiEaA,EAAO,KAAMC,EAAAA,EAAAA,IAACC,EAAAA,EAAG,CAACC,MAAM,kBACrC,UAlEyBC,IAAqB,IAApB,KAAEC,GAAa,EAEvC,MAAQC,MAAOC,GAAUF,EAAKG,kBAGxBC,EAAQC,MAAMC,KAAK,IAAIC,IAAIL,EAAMM,KAAKC,IAAI,aAAKA,SAAY,QAAR,EAAJA,EAAMC,cAAM,WAAR,EAAJC,EAAcC,IAAI,MACpEC,QAAQC,GAAwC,iBAARA,IACxCC,OAGGC,EAA8C,CAAC,EAiBrD,OAhBAd,EAAMe,SAASR,IAAS,QACtB,MAAMG,EAAOH,SAAY,QAAR,EAAJA,EAAMC,cAAM,WAAR,EAAJQ,EAAcN,KACrBO,EAAQV,SAAY,QAAR,EAAJA,EAAMC,cAAM,WAAR,EAAJU,EAAcD,MACvBH,EAAYJ,KACfI,EAAYJ,GAAQ,IAAIL,KAE1BS,EAAYJ,GAAMS,IAAIF,EAAM,KAW5BvB,EAAAA,EAAAA,IAAC0B,EAAAA,EAAM,CAACC,UAAU,uBAChB3B,EAAAA,EAAAA,IAAAA,KAAAA,KACGQ,EAAMI,KAAI,CAACI,EAAMY,KAChB5B,EAAAA,EAAAA,IAAAA,KAAAA,CAAI6B,IAAKD,IACP5B,EAAAA,EAAAA,IAAAA,KAAAA,KAAKgB,EAAK,MACVhB,EAAAA,EAAAA,IAAAA,KAAAA,KACGS,MAAMC,KAAKU,EAAYJ,IACrBG,OACAP,KAAI,CAACW,EAAOO,KAGX9B,EAAAA,EAAAA,IAAAA,KAAAA,CAAI6B,IAAKC,IACP9B,EAAAA,EAAAA,IAAC+B,EAAAA,GAAI,CAACC,GAAE,KAAOhB,EAAI,IAAIO,GACpBU,OAAOV,GAAO,kBAoBxB,C","sources":["webpack://blog-tetsuyainfra/./src/pages/blog/archive.tsx"],"sourcesContent":["//\n// src/pages/blog/archive/index.tsx\n//\nimport * as React from 'react'\nimport { graphql, Link, PageProps } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { parseISO } from 'date-fns'\nimport { format } from 'date-fns-tz'\nimport Layout from '../../components/layout'\nimport Seo from '../../components/seo'\nimport useSiteMetadata from '../../components/useSiteMetadata'\n\ntype Props = PageProps<Queries.GetAllBlogEntryQuery>\n\nconst BlogArchiveIndex = ({ data }: Props) => {\n  // console.log(data)\n  const { nodes: posts } = data.allMarkdownRemark\n\n  // yearの一覧を作成\n  const years = Array.from(new Set(posts.map((post) => post?.fields?.year)))\n    .filter((item): item is string => typeof item == 'string')\n    .sort()\n\n  // 年をキーに取る月一覧を作成\n  const year_months: { [key: string]: Set<string> } = {}\n  posts.forEach((post) => {\n    const year = post?.fields?.year as string\n    const month = post?.fields?.month as string\n    if (!year_months[year]) {\n      year_months[year] = new Set<string>()\n    }\n    year_months[year].add(month)\n  })\n\n  function utc2tz(date_string: string) {\n    useSiteMetadata()\n    const utc_date = parseISO(date_string)\n    const s = format(utc_date, 'yyyy/MM/dd HH:mm', { timeZone: 'Asia/Tokyo' })\n    return s\n  }\n\n  return (\n    <Layout pageTitle=\"Blog Archive Index\">\n      <ul>\n        {years.map((year, i) => (\n          <li key={i}>\n            <h3>{year}年</h3>\n            <ul>\n              {Array.from(year_months[year])\n                .sort()\n                .map((month, j) => (\n                  // <li key={j}>{Number(month)}月の記事一覧</li>\n\n                  <li key={j}>\n                    <Link to={`./${year}/${month}`}>\n                      {Number(month)}月の記事一覧\n                    </Link>\n                  </li>\n                ))}\n            </ul>\n          </li>\n        ))}\n      </ul>\n      {/* <ul>\n        {posts.map((post) => {\n          return (\n            <li key={post.id}>\n              <Link to={post.fields!.url!}>\n                <span>{utc2tz(post.fields!.date!)}</span>\n                <span>{post.frontmatter?.title}</span>\n              </Link>\n            </li>\n          )\n        })}\n      </ul> */}\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"My Blog Posts\" />\nexport default BlogArchiveIndex\n\nexport const pageQuery = graphql`\n  query GetAllBlogEntry {\n    allMarkdownRemark(sort: { frontmatter: { date: ASC } }) {\n      totalCount\n      nodes {\n        id\n        fields {\n          year\n          month\n          day\n          year_month\n          local_date\n          url\n        }\n        frontmatter {\n          title\n          date\n        }\n        excerpt\n      }\n    }\n  }\n`\n"],"names":["Head","___EmotionJSX","Seo","title","_ref","data","nodes","posts","allMarkdownRemark","years","Array","from","Set","map","post","fields","_post$fields","year","filter","item","sort","year_months","forEach","_post$fields2","month","_post$fields3","add","Layout","pageTitle","i","key","j","Link","to","Number"],"sourceRoot":""}